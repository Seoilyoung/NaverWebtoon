package gabriel.com.nwebtoon_android.Activity;

import android.content.Intent;
import android.content.pm.ActivityInfo;
import android.net.ConnectivityManager;
import android.os.Bundle;
import android.support.design.widget.FloatingActionButton;
import android.support.design.widget.NavigationView;
import android.support.design.widget.TabLayout;

import android.support.v4.app.Fragment;
import android.support.v4.app.FragmentManager;
import android.support.v4.app.FragmentPagerAdapter;
import android.support.v4.app.FragmentStatePagerAdapter;
import android.support.v4.view.GravityCompat;
import android.support.v4.view.ViewPager;

import android.support.v4.widget.DrawerLayout;
import android.support.v7.app.AppCompatActivity;
import android.support.v7.widget.Toolbar;
import android.util.Log;
import android.view.LayoutInflater;
import android.view.MenuItem;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.Toast;

import com.bumptech.glide.Glide;

import java.util.ArrayList;
import java.util.Calendar;
import java.util.List;

import gabriel.com.nwebtoon_android.model.LocalData;
import gabriel.com.nwebtoon_android.model.adList;
import gabriel.com.nwebtoon_android.module.CirclePageIndicator;
import gabriel.com.nwebtoon_android.network.Controller;
import gabriel.com.nwebtoon_android.R;

import gabriel.com.nwebtoon_android.network.ServerInterface;

public class MainActivity extends AppCompatActivity
        implements NavigationView.OnNavigationItemSelectedListener {

    private ServerInterface api ;
    private DrawerLayout drawer ;
    ViewGroup layout_drawer_search, layout_drawer_mypage, layout_drawer_setting ;
    ViewPager viewPager, viewpager_drawer;
    TabLayout tabLayout,tab_drawer;
    public static List<adList> ad_img = null;
    ImageFragmentPagerAdapter imageFragmentPagerAdapter;
    static final int NUM_ITEMS = 3;
    ViewPager ads_pager;
    CirclePageIndicator page_indicator;
    Calendar cal = Calendar.getInstance();
    LocalData localdata ;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_PORTRAIT);
        setContentView(R.layout.activity_main);

        localdata = LocalData.findById(LocalData.class, 1);
        if(localdata.getNetwork() && Controller.getInstance().getNetworkinfo().getType()== ConnectivityManager.TYPE_MOBILE)
            Toast.makeText(getApplicationContext(), "데이터 네트워크에 연결 중입니다. 데이터 통화료과 부과됩니다.", Toast.LENGTH_LONG).show();

        Toolbar toolbar =(Toolbar) findViewById(R.id.toolbar);
        toolbar.setContentInsetsAbsolute(0, 0);
        drawer = (DrawerLayout) findViewById(R.id.drawer_layout);
        FloatingActionButton fab = (FloatingActionButton) findViewById(R.id.fab);
        fab.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                if (drawer.isDrawerVisible(GravityCompat.END)) {
                    drawer.closeDrawer(GravityCompat.END);
                } else {
                    drawer.openDrawer(GravityCompat.END);
                }
            }
        });
        NavigationView navigationView = (NavigationView) findViewById(R.id.nav_view);
        navigationView.setNavigationItemSelectedListener(this);

        setDrawerMenu();

        viewPager = (ViewPager) findViewById(R.id.viewpager_mainpage);
        viewPager.setOffscreenPageLimit(6);
        if(viewPager != null){
            setupViewPager(viewPager);
        }
        imageFragmentPagerAdapter = new ImageFragmentPagerAdapter(getSupportFragmentManager());
        ads_pager = (ViewPager) findViewById(R.id.ads_pager);

        page_indicator = (CirclePageIndicator) findViewById (R.id.page_indicator);
        ads_pager.setAdapter(imageFragmentPagerAdapter);
        page_indicator.setViewPager(ads_pager);

        tabLayout = (TabLayout) findViewById(R.id.tab_main);
        tabLayout.setupWithViewPager(viewPager);
        TabLayout.Tab tab = tabLayout.getTabAt(cal.get(Calendar.DAY_OF_WEEK)-1);
        try {
            tab.select();
        }catch (NullPointerException e){
            Log.e("MainActivity"," - tab.select() NullPOintException");
        }

        viewpager_drawer = (ViewPager)findViewById(R.id.viewpager_drawer);
        tab_drawer = (TabLayout)findViewById(R.id.tab_drawer);
    }


    @Override
    public void onBackPressed() {
        if (drawer.isDrawerOpen(GravityCompat.END)) {
            drawer.closeDrawer(GravityCompat.END);
        } else {
            super.onBackPressed();
        }
    }

    private void setupViewPager(ViewPager viewPager) {
        MainPageAdapter adapter = new MainPageAdapter(getSupportFragmentManager());
        adapter.addFragment(ToonListFragment.newInstance(0), "SUN");
        adapter.addFragment(ToonListFragment.newInstance(1), "MON");
        adapter.addFragment(ToonListFragment.newInstance(2), "TUE");
        adapter.addFragment(ToonListFragment.newInstance(3), "WED");
        adapter.addFragment(ToonListFragment.newInstance(4), "THU");
        adapter.addFragment(ToonListFragment.newInstance(5), "FRI");
        adapter.addFragment(ToonListFragment.newInstance(6), "SAT");

        viewPager.setAdapter(adapter);

    }
    static class MainPageAdapter extends FragmentStatePagerAdapter {
        private final List<Fragment> mFragments = new ArrayList<>();
        private final List<String> mFragmentTitles = new ArrayList<>();

        public MainPageAdapter(FragmentManager fm) {
            super(fm);
        }

        public void addFragment(Fragment fragment, String title) {
            mFragments.add(fragment);
            mFragmentTitles.add(title);
        }

        @Override
        public Fragment getItem(int position) {
            return mFragments.get(position);
        }

        @Override
        public int getCount() {
            return mFragments.size();
        }

        @Override
        public CharSequence getPageTitle(int position) {
            return mFragmentTitles.get(position);
        }
    }

    @Override
    protected void onResume() {
        super.onResume();
        if (viewpager_drawer != null) {
            setupViewPager_drawer(viewpager_drawer);
        }
        tab_drawer.setupWithViewPager(viewpager_drawer);
    }

    public static class ImageFragmentPagerAdapter extends FragmentPagerAdapter {
        public ImageFragmentPagerAdapter(FragmentManager fm) {
            super(fm);
        }

        @Override
        public Fragment getItem(int position) {
            SwipeFragment fragment = new SwipeFragment();
            return SwipeFragment.newInstance(position);
        }

        @Override
        public int getCount() {
            return NUM_ITEMS;
        }
    }
    public static class SwipeFragment extends Fragment {
        @Override
        public View onCreateView(LayoutInflater inflater, ViewGroup container,
                                 Bundle savedInstanceState) {
            View swipeView = inflater.inflate(R.layout.fragment_main_ads_pager, container, false);
            ImageView imageView = (ImageView) swipeView.findViewById(R.id.img_ad);
            Bundle bundle = getArguments();
            int position = bundle.getInt("position");
            try {
                adList adInfo = ad_img.get(position);
               // Glide.with(this).load(adInfo.TOON_IMG).into(imageView);
                switch (position){
                    case 0 :
                        Glide.with(this).load(R.drawable.ad_0001).into(imageView);
                        //imageView.setImageResource(R.drawable.ad_0001);
                        break;
                    case 1 :
                        Glide.with(this).load(R.drawable.ad_0002).into(imageView);
                        //imageView.setImageResource(R.drawable.ad_0002);
                        break;
                    case 2 :
                        Glide.with(this).load(R.drawable.ad_0003).into(imageView);
                        //imageView.setImageResource(R.drawable.ad_0002);
                        break;
                    default:
                        imageView.setImageResource(R.drawable.ad_0001);
                        break;
                }
            } catch(Exception e){
                Log.e("MainActivity", "Ad image loading failed");
                e.printStackTrace();
            }
            return swipeView;
        }

        static SwipeFragment newInstance(int position) {
            SwipeFragment swipeFragment = new SwipeFragment();
            Bundle bundle = new Bundle();
            bundle.putInt("position", position);
            swipeFragment.setArguments(bundle);
            return swipeFragment;
        }
    }






    @SuppressWarnings("StatementWithEmptyBody")
    @Override
    public boolean onNavigationItemSelected(MenuItem item) {
        // Handle navigation view item clicks here.
        int id = item.getItemId();

        if (id == R.id.nav_camera) {
            // Handle the camera action
        } else if (id == R.id.nav_gallery) {

        } else if (id == R.id.nav_slideshow) {

        } else if (id == R.id.nav_manage) {

        } else if (id == R.id.nav_share) {

        } else if (id == R.id.nav_send) {

        }

        DrawerLayout drawer = (DrawerLayout) findViewById(R.id.drawer_layout);
        drawer.closeDrawer(GravityCompat.END);
        return true;
    }

    private void setDrawerMenu() {

        layout_drawer_search = (ViewGroup)findViewById(R.id.layout_drawer_search);
        layout_drawer_search.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                Toast.makeText(getApplicationContext(), "검색화면 출력", Toast.LENGTH_SHORT).show();
                drawer.closeDrawer(GravityCompat.END);
                /*Intent intent = new Intent(getApplicationContext(), SearchActivity.class);
                startActivity(intent);*/
            }
        });
        layout_drawer_mypage = (ViewGroup)findViewById(R.id.layout_drawer_mypage);
        layout_drawer_mypage.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                drawer.closeDrawer(GravityCompat.END);
                Intent intent = new Intent(getApplicationContext(), MypageActivity.class);
                startActivity(intent);
            }
        });
        layout_drawer_setting = (ViewGroup)findViewById(R.id.layout_drawer_setting);
        layout_drawer_setting.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                drawer.closeDrawer(GravityCompat.END);
                Intent intent = new Intent(getApplicationContext(), SettingActivity.class);
                startActivity(intent);
            }
        });
    }

    private void setupViewPager_drawer(ViewPager viewPager) {
        MainPageAdapter adapter = new MainPageAdapter(getSupportFragmentManager());
        adapter.addFragment(new MypageFavoriteFragment(), "관심 웹툰");
        viewPager.setAdapter(adapter);
    }
}
